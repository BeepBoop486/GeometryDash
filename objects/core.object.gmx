<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <maskName>&lt;undefined&gt;</maskName>
  <parentName>&lt;undefined&gt;</parentName>
  <events>
    <event enumb="0" eventtype="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///var init&#13;
global.toput = noone&#13;
global.selected_obj = noone //Selected object&#13;
global.selected_mode = 0 // 0 - build, 1 - edit, 2 - delete&#13;
global.playing = false //Checks if we're in test mode&#13;
global.dragging= false //Variable that determines wether we're dragging or not&#13;
global.intab = 0 // 0 - solid, 1 - spike</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event enumb="0" eventtype="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mouse_xx = floor(mouse_x/30)&#13;
mouse_yy = floor(mouse_y/30)&#13;
&#13;
if global.selected_mode == 1 //If we're in edit mode&#13;
&amp;&amp; !position_meeting(mouse_x, mouse_y, undel)&#13;
&amp;&amp; !position_meeting(mouse_x, mouse_y, obj_ground)&#13;
&#13;
&amp;&amp; mouse_check_button_released(mb_left)&#13;
{&#13;
	/* aaaaaaall this bullshit MUST be deleted later */&#13;
	global.selected_obj = 0 //Forgot to set selected object to practically null xd&#13;
	//Just to avoid bugs xd&#13;
	with(all)&#13;
	{&#13;
		image_blend = c_white&#13;
	}&#13;
	global.selected_obj = instance_position(mouse_x, mouse_y, all)&#13;
	with(global.selected_obj)&#13;
	{&#13;
		image_blend = c_lime&#13;
	}&#13;
}&#13;
&#13;
if global.selected_mode == 2 /*&amp;&amp; mouse_y &lt; 4592*/ &amp;&amp; !position_meeting(mouse_x, mouse_y, undel)&#13;
//Undeleteable elements&#13;
&amp;&amp; !position_meeting(mouse_x, mouse_y, obj_ground) {&#13;
	position_destroy(mouse_x, mouse_y)&#13;
}&#13;
&#13;
if keyboard_check_released(vk_enter)&#13;
{&#13;
	global.playing = !global.playing&#13;
	if !global.playing {&#13;
		tt = obj_player&#13;
		tt.x = 64&#13;
		tt.y = 4400&#13;
	} else  {&#13;
		//When we're playing the camera will focus the 0-0 (basically that) when does the player is&#13;
		//view_xview = 0&#13;
		//view_yview = 4076&#13;
		view_xview = 0&#13;
		view_yview = 4076&#13;
	}&#13;
	hide_ui()&#13;
}&#13;
&#13;
if global.dragging &amp;&amp; !global.playing&#13;
{&#13;
	view_xview = view_xview + drag_x - mouse_x&#13;
	view_yview = view_yview + drag_y - mouse_y&#13;
}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keyboard shortcuts with a selected object&#13;
&#13;
if global.selected_obj != 0 //If we've selected an object&#13;
{&#13;
	&#13;
	///MOVE&#13;
	&#13;
	if(keyboard_check(vk_shift))&#13;
	{&#13;
		///Mini movements&#13;
		if keyboard_check_released(ord("W")) {&#13;
			//If we press the 'W' key&#13;
			with(global.selected_obj) {y -= 2}&#13;
		} if keyboard_check_released(ord("S")) {&#13;
			//If we press the 'S' key&#13;
			with(global.selected_obj) {y += 2}&#13;
		} if keyboard_check_released(ord("A")) {&#13;
			//If we press the 'A' key&#13;
			with(global.selected_obj) {x -= 2}&#13;
		} if keyboard_check_released(ord("D")) {&#13;
			//If we press the 'D' key&#13;
			with(global.selected_obj) {x += 2}&#13;
		}&#13;
	} else {&#13;
		if(!keyboard_check(vk_control)) {&#13;
			if keyboard_check_released(ord("W")) {&#13;
				//If we press the 'W' key&#13;
				with(global.selected_obj) {y -= 61}&#13;
			} if keyboard_check_released(ord("S")) {&#13;
				//If we press the 'S' key&#13;
				with(global.selected_obj) {y += 61}&#13;
			} if keyboard_check_released(ord("A")) {&#13;
				//If we press the 'A' key&#13;
				with(global.selected_obj) {x -= 61}&#13;
			} if keyboard_check_released(ord("D")) {&#13;
				//If we press the 'D' key&#13;
				with(global.selected_obj) {x += 61}&#13;
			}&#13;
		}&#13;
	}&#13;
	&#13;
	///ROTATE&#13;
	if keyboard_check_released(ord("Q")) {&#13;
		with(global.selected_obj) {image_angle += 90}&#13;
	}  if keyboard_check_released(ord("E")) {&#13;
		with(global.selected_obj) {image_angle -= 90}&#13;
	}&#13;
	&#13;
	&#13;
	///Commands with CTRL&#13;
	if(keyboard_check(vk_control))&#13;
	{&#13;
		if(keyboard_check_released(ord("D"))) {&#13;
			tt = instance_create(global.selected_obj.x, global.selected_obj.y, global.selected_obj.object_index)&#13;
			tt.image_angle = global.selected_obj.image_angle //Set the cloned obj the rotation of the object to clone&#13;
			tt.image_xscale = global.selected_obj.image_xscale //Sets the image_xscale too&#13;
			tt.image_yscale = global.selected_obj.image_yscale //Sets the image_yscale too&#13;
			global.selected_obj = tt&#13;
		}&#13;
	}&#13;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event enumb="58" eventtype="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.dragging = false</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event enumb="57" eventtype="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.selected_mode = 0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event enumb="56" eventtype="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !position_meeting(mouse_x, mouse_y, obj_ed_obj)&#13;
&amp;&amp; !position_meeting(mouse_x, mouse_y, undel) //You can't put an object upon "undel" child objects&#13;
&amp;&amp; global.toput != noone /*&amp; mouse_y &lt; 4592*/&#13;
&amp;&amp; global.selected_mode = 0 // If we're in build mode&#13;
{&#13;
	boj = instance_create(mouse_x, mouse_y, global.toput) //Bugs fixed&#13;
	with(boj) move_snap(30.5,30.5)&#13;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event enumb="55" eventtype="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.dragging = true&#13;
drag_x = mouse_x&#13;
drag_y = mouse_y</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event enumb="51" eventtype="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !place_meeting(mouse_x, mouse_y, obj_ed_obj)&#13;
{&#13;
	global.selected_mode = 2&#13;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event enumb="0" eventtype="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <useapplyto>-1</useapplyto>
        <isquestion>0</isquestion>
        <exetype>2</exetype>
        <functionname/>
        <codestring/>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black)&#13;
drawGrid(61,61)&#13;
&#13;
if !global.playing&#13;
{&#13;
	draw_sprite(spr_editorBG, 0, view_xview, view_yview+532)&#13;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
